install.packages("shiny")
library(shiny)
?tnorm
?rt
rt(5,6)
plot(rt)
plot(rt(5,6))
hist(rt(5,6))
hist(rt(50,6))
hist(rt(500,6))
runapp()
runApp()
?sliderInput
runApp()
hist(rt(500,6, col = 'yellow', border = 'white')
)
hist(rt(500,6), col = 'yellow', border = 'white')
hist(rt(500,6), col = 'gray', border = 'white')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?hist
?curve
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='rlstober', token='19D76CE7FAAFA0926D7B9FD5605810A9', secret='vU13I9/diQzp3GB1EpbABxQT3mEIX7wPg2Zlu3Qw')
library(shinyapps)
shinyapps::deployApp()
runApp()
install_github("slidify", "ramnath")
library(devtools)
install_github("slidify", "ramnath")
install_github("ramnath/slidify")
install_github("ramnathv/slidify")
install_github("ramnathv/slidifyLibraries")
library(slidify)
?hist$mid
?hist
runapp()
runApp()
library(shiny)
runApp()
tdist<-rt(30,5)
tsd<-sd(tdist)
tmn<-mean(tdist)
h<-hist(tdist, col = 'gray', border = 'white', main="T-distribution with Normal Overlay", xlab="Standard Deviation")
min(tdist)
max(tdist)
xfit<-seq(min(tdist),max(tdist),length=50)
xfit
yfit<-dnorm(xfit,mean=tmn,sd=tsd)
yfit
h$mids
h$mids[1:2]
diff(h$mids[1:2])
xfit<-seq(min(tdist),max(tdist),length=50)
yfit<-dnorm(xfit,mean=tmn,sd=tsd)
?dnorm
##xfit is a horizontal line with 50 points, running the range of the histogram
yfit<-dnorm(xfit,mean=tmn,sd=tsd)
hist(yfit)
yfit <- yfit*diff(h$mids[1:2])*length(tdist)
hist(yfit)
lines(xfit, yfit, col="red", lwd=2)
runapp()
runApp()
hist(xfit)
hist(yfit)
slidify()
library(slidify)
slidify()
run(app)
runApp()
library('shiny')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
?reactive
shiny::runApp()
shiny::runApp()
